[tool.poetry]
name = "qutrade"
version = "0.1.0"
description = ""
authors = ["brendan-reid91 <brendan.reid1991@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
pandas = "^1.5.3"
alpha-vantage = "^2.3.1"
pytest = { version = "^6.2.5", optional = true }
pytest-cov = { version = "^3.0.0", optional = true }
pytest-xdist = { version = "^2.5.0", optional = true }
pytest-lazy-fixture = {version = "^0.6.3", optional = true}
pytest-repeat = { version = "^0.9.1", optional = true }
pytest-mock = { version = "^3.7.0", optional = true }
pylint = { version = "2.12.2", optional = true }
pycodestyle = { version = "^2.8.0", optional = true }
mypy = { version = "^0.931", optional = true }
autopep8 = { version = "^2.0.1", optional = true }
matplotlib = { version = "^3.3", optional = true }
pytest-benchmark = { version = "^3.4.1", optional = true}
pathos = "^0.3.0"

[tool.poetry.extras]
test = ["pytest", "pytest-cov", "pytest-lazy-fixture", "pytest-xdist", "pytest-repeat", "pytest-mock", "nbmake"]
lint = ["pylint", "mypy", "pycodestyle", "autopep8"]
benchmark = ["pytest", "pytest-benchmark"]
visualisation = ["matplotlib"]
docs = ["GitPython", "Sphinx", "sphinx-copybutton", "sphinx-rtd-theme", "sphinx-toggleprompt", "sphinx-autodoc-typehints", "recommonmark", "rinohtype", "nbsphinx", "ipykernel"]
licenses = ["pip-licenses"]

[tool.poetry.group.dev.dependencies]
black = {version = "^23.1a1", allow-prereleases = true}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "no-else-return",
    "no-else-raise",
    "no-else-break",
    "no-else-continue",
    "unnecessary-pass",
    "logging-fstring-interpolation",
]

[tool.pylint.reports]
evaluation = "10.0 - ((float(5 * error + warning + convention) / statement) * 10)"

[tool.pylint.basic]
good-names-rgxs = "[a-z]"
ignore-patterns = ["test_*", "benchmark_*"]

[tool.pylint.typecheck]
ignored-modules = [
    "stim"
]

[[tool.mypy.overrides]]
module = [
    "alpha_vantage"
]

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true

[tool.pytest.ini_options]
markers = """
    random(low=1, medium=10, high=50): specify the number of repeats required to gain sufficient coverage. \
    To enable this mark use the `--random-repeats` flag on the command line and specify either `low`, \
    `medium` or `high`. Default is `low`.
    skip_if_low(reason=""): mark a test to be skipped if the the coverage run is `low`.
"""
testpaths = [
    "tests/unit/",
]
